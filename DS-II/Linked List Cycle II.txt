# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def detectCycle(self, head: Optional[ListNode]) -> Optional[ListNode]:
        ptr = head
        dic = {}
        
        while True:
            if ptr == None or ptr.next == None: return
            
            if ptr in dic:
                return ptr
                
            dic[ptr] = ptr.next
            ptr = ptr.next